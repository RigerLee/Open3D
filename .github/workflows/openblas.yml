# Minium test for Open3D with OpenBLAS/LAPACK on both x86_64 and aarch64.
# This test is intentially kept minimal and self-contained.

name: Ubuntu OpenBLAS CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  x86_64:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-aarch64-ccache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-aarch64-ccache
      - name: Set up Python version
        uses: actions/setup-python@v2
        with:
            python-version: 3.6
      - name: Install dependencies
        run: |
            sudo apt-get --yes install ccache
            ccache -M 2G  # GitHub's total cache limit is 5GB for all OSes.
            sudo apt-get update -q -y
            sudo apt-get install -y apt-utils build-essential git cmake
            sudo apt-get install -y python3-dev
            sudo apt-get install -y xorg-dev libglu1-mesa-dev ccache
            sudo apt-get install -y libblas-dev liblapack-dev liblapacke-dev
            python -m pip install -U pytest==6.0.1
            python -m pip install -U scipy==1.4.1
            python -m pip install -U wheel==0.35.1
      - name: Build and test
        run: |
            PATH=/usr/lib/ccache:$PATH
            ccache -s
            mkdir build
            cd build
            cmake \
              -DUSE_BLAS=ON \
              -DCMAKE_BUILD_TYPE=Release \
              -DBUILD_SHARED_LIBS=ON \
              -DBUILD_GUI=OFF \
              -DBUILD_TENSORFLOW_OPS=OFF \
              -DBUILD_PYTORCH_OPS=OFF \
              -DBUILD_UNIT_TESTS=ON \
              -DCMAKE_INSTALL_PREFIX=~/open3d_install \
              -DPYTHON_EXECUTABLE="$(which python3)" \
              ..
            make -j$(nproc)
            make tests -j$(nproc)
            make install-pip-package -j$(nproc)
            ./bin/tests --gtest_filter="-*Reduce*Sum*"
            pytest ../python/test/ --ignore ../python/test/ml_ops/
            ccache -s

  arm64:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-aarch64-ccache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-aarch64-ccache
      - name: Build on ARM Container
        uses: uraimo/run-on-arch-action@v2.0.2
        with:
          # Ubuntu 20.04 has sufficiently new CMake
          arch: aarch64
          distro: ubuntu20.04

          # Speeds up builds
          githubToken: ${{ github.token }}

          # https://github.com/uraimo/run-on-arch-action/issues/4
          setup: |
            mkdir -p ~/.ccache

          # Mount cached directories in the container for faster builds
          dockerRunArgs: |
            --volume "${HOME}/.ccache:/root/.ccache"

          # Install dependencies
          install: |
            apt-get update -q -y
            apt-get install -y apt-utils build-essential git cmake
            apt-get install -y python3 python3-dev python3-pip python3-virtualenv
            apt-get install -y xorg-dev libglu1-mesa-dev ccache
            apt-get install -y libblas-dev liblapack-dev liblapacke-dev
            /usr/sbin/update-ccache-symlinks
            echo 'export PATH="/usr/lib/ccache:$PATH"' | tee -a ~/.bashrc
            virtualenv --python=$(which python) ${HOME}/venv
            source ${HOME}/venv/bin/activate
            which python
            python --version
            pip install pytest=="6.0.1" -U
            pip install wheel=="0.35.1" -U

          # Build and run Open3D tests
          run: |
            PATH=/usr/lib/ccache:$PATH
            ccache -s
            source ${HOME}/venv/bin/activate
            mkdir build
            cd build
            cmake \
              -DCMAKE_BUILD_TYPE=Release \
              -DBUILD_SHARED_LIBS=ON \
              -DBUILD_GUI=OFF \
              -DBUILD_TENSORFLOW_OPS=OFF \
              -DBUILD_PYTORCH_OPS=OFF \
              -DBUILD_UNIT_TESTS=ON \
              -DCMAKE_INSTALL_PREFIX=~/open3d_install \
              -DPYTHON_EXECUTABLE=$(which python) \
              ..
            make -j$(nproc)
            make tests -j$(nproc)
            make install-pip-package -j$(nproc)
            ./bin/tests --gtest_filter="-*Reduce*Sum*"
            pytest ../python/test/ --ignore ../python/test/ml_ops/
            ccache -s
